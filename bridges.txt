vector<pair<int,int> > res;
int low[MAX],parent[MAX],disc[MAX];
bool mark[MAX];
int t=0;

void dfs(int u){
	mark[u]=true;
	disc[u]=t++;low[u]=disc[u];
	for(int i=0;i<G[u].size();i++){
		int v = G[u][i];
		parent[v]=u;
		if(!mark[v]){
			dfs(v);
			low[u] = min(low[u],low[v]);
			if(low[v] > disc[u]){res.push_back(make_pair(u,v));}
		}else{
			if(v != parent[u]){low[u] = min(low[u],disc[v]);}
		}
	}
}

void bridges(){
	memset(mark,0,sizeof(mark));
	memset(parent,-1,sizeof(parent));
	for(int i=1;i<=n;i++){
		if(!mark[i]){dfs(i);}
	}
}